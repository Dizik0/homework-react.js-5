{"version":3,"sources":["Components/ContactList/ContactList.module.scss","Components/AddContact/AddContact.module.scss","App.module.scss","Components/Filter/Filter.module.scss","redux/contact/contact-action.js","Components/AddContact/AddContact.js","Components/Filter/Filter.js","Components/ContactList/ContactList.js","App.js","reportWebVitals.js","redux/contact/contact-reducer.js","redux/store.js","index.js"],"names":["module","exports","addContact","createAction","payload","name","number","id","uuidv4","deleteContact","filterContact","AddContact","state","alerError","props","contacts","items","find","submitformContact","e","preventDefault","alert","stateTransfer","setState","currentTarget","value","this","onSubmit","htmlFor","className","style","transparent","formInner","onChange","type","pattern","title","required","buttom","Component","defaultProps","connect","contact","dispatch","actions","Filter","filter","lable","target","ContactList","filterTodos","deleteTodo","list","map","listItem","button","onClick","toLowerCase","includes","App","box","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","createReducer","_","combineReducers","persistConfig","key","storage","blacklist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","persistReducer","contactReducer","devTools","process","stor","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.bb5bdaa5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2JA1Q\",\"listItem\":\"ContactList_listItem__3EQPt\",\"button\":\"ContactList_button__3unP8\",\"name\":\"ContactList_name__RMjLG\",\"number\":\"ContactList_number__1erup\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transparent\":\"AddContact_transparent__pYvIT\",\"formInner\":\"AddContact_formInner__6jMu-\",\"buttom\":\"AddContact_buttom__3DApn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"App_box__1VUMD\",\"title\":\"App_title__11yfr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"lable\":\"Filter_lable__1NRTR\"};","import { v4 as uuidv4 } from \"uuid\";\r\n// import contactTypes from \"./contact-types\";\r\n\r\nimport { createAction } from \"@reduxjs/toolkit\";\r\n\r\n// export const addContact = ({ name, number }) => ({\r\n//   type: contactTypes.ADD,\r\n//   payload: {\r\n//     name,\r\n//     number,\r\n//     id: uuidv4(),\r\n//   },\r\n// });\r\n\r\nexport const addContact = createAction(\"addContact\", ({ name, number }) => ({\r\n  payload: {\r\n    name,\r\n    number,\r\n    id: uuidv4(),\r\n  },\r\n}));\r\n\r\n//   ({ name, number }) => ({\r\n//   type: contactTypes.ADD,\r\n// payload: {\r\n//   name,\r\n//   number,\r\n//   id: uuidv4(),\r\n// },\r\n// });\r\n\r\nexport const deleteContact = createAction(\"deleteContact\");\r\n//   (todoId) => ({\r\n//   type: contactTypes.DEL,\r\n//   payload: todoId,\r\n// });\r\n\r\nexport const filterContact = createAction(\"filterContact\");\r\n//   (value) => ({\r\n//   type: contactTypes.FIL,\r\n//   payload: value,\r\n// });\r\n","import { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport style from \"./AddContact.module.scss\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../redux/contact/contact-action\";\r\n\r\nclass AddContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  alerError = () => {\r\n    return this.props.contacts.items.find(({ name }) => {\r\n      return name === this.state.name;\r\n    });\r\n  };\r\n\r\n  // deleteTodo = (todoId) => {\r\n  //   this.setState((prevState) => ({\r\n  //     todos: prevState.todos.filter((todo) => todo.id !== todoId),\r\n  //   }));\r\n  // };\r\n\r\n  submitformContact = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (this.alerError()) {\r\n      alert(`${this.state.name} is alreaady in contacts`);\r\n      return;\r\n    }\r\n    this.props.stateTransfer(this.state);\r\n\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  addContact = (e) => {\r\n    const { value, name } = e.currentTarget;\r\n\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  render() {\r\n    const { number, name } = this.state;\r\n    return (\r\n      <form\r\n        onSubmit={this.submitformContact}\r\n        htmlFor={this.props.uuidv4()}\r\n        className={style.transparent}\r\n      >\r\n        <div className={style.formInner}>\r\n          <label>\r\n            Name\r\n            <input\r\n              onChange={this.addContact}\r\n              type=\"text\"\r\n              value={name}\r\n              name=\"name\"\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n              required\r\n            />\r\n          </label>\r\n          <label>\r\n            Number\r\n            <input\r\n              onChange={this.addContact}\r\n              type=\"tel\"\r\n              value={number}\r\n              name=\"number\"\r\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n              required\r\n            />\r\n          </label>\r\n          <button className={style.buttom} type=\"submit\">\r\n            Add contact\r\n          </button>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nAddContact.propTypes = {\r\n  contacts: PropTypes.object,\r\n  uuidv4: PropTypes.func,\r\n  name: PropTypes.string,\r\n  number: PropTypes.number,\r\n  stateTransfer: PropTypes.func,\r\n};\r\nAddContact.defaultProps = {\r\n  contacts: [],\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contacts: state.contact,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  stateTransfer: (value) => dispatch(actions.addContact(value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddContact);\r\n","import { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport style from \"./Filter.module.scss\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport * as actions from \"../../redux/contact/contact-action\";\r\n\r\nclass Filter extends Component {\r\n  state = {\r\n    filter: \"\",\r\n  };\r\n\r\n  render() {\r\n    const { filterContact, filter } = this.props;\r\n    return (\r\n      <input\r\n        className={style.lable}\r\n        type=\"text\"\r\n        onChange={filterContact}\r\n        value={filter}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nFilter.propTypes = {\r\n  filterContact: PropTypes.func,\r\n  filter: PropTypes.string,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  filter: state.contact.filter,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  filterContact: (e) => dispatch(actions.filterContact(e.target.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport style from \"./ContactList.module.scss\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../redux/contact/contact-action\";\r\n\r\nclass ContactList extends Component {\r\n  render() {\r\n    const { filterTodos, deleteTodo, uuidv4 } = this.props;\r\n\r\n    return (\r\n      <ul className={style.list}>\r\n        {filterTodos.map(({ name, number, id }) => (\r\n          <li key={uuidv4()} className={style.listItem}>\r\n            <p className={style.name}>{name}</p>\r\n            <span className={style.number}>{number}</span>\r\n            <button\r\n              className={style.button}\r\n              type=\"button\"\r\n              onClick={() => deleteTodo(id)}\r\n            >\r\n              Удалить\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nContactList.propTypes = {\r\n  filterTodos: PropTypes.array,\r\n  uuidv4: PropTypes.func,\r\n  deleteTodo: PropTypes.func,\r\n};\r\n\r\n// const { filter, contacts } = this.state;\r\n\r\n// const filterTodos = contacts.filter(({ name }) =>\r\n//   name.toLowerCase().includes(filter)\r\n// );\r\n\r\nconst mapStateToProps = (state) => {\r\n  const { filter, items } = state.contact;\r\n\r\n  const filterTodos = items.filter(({ name }) =>\r\n    name.toLowerCase().includes(filter)\r\n  );\r\n\r\n  return {\r\n    filterTodos: filterTodos,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  deleteTodo: (id) => dispatch(actions.deleteContact(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import \"./App.css\";\r\nimport { Component } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport AddContact from \"./Components/AddContact\";\r\nimport Filter from \"./Components/Filter\";\r\nimport ContactList from \"./Components/ContactList\";\r\nimport style from \"./App.module.scss\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    // contacts: [],\r\n    // name: \"\",\r\n    // number: \"\",\r\n    filter: \"\",\r\n  };\r\n  // componentDidUpdate() {\r\n  //   localStorage.setItem(\"key-1\", JSON.stringify(this.state.contacts));\r\n  // }\r\n\r\n  // componentDidMount() {\r\n  //   if (JSON.parse(localStorage.getItem(\"key-1\"))) {\r\n  //     this.setState({ contacts: JSON.parse(localStorage.getItem(\"key-1\")) });\r\n  //   }\r\n  // }\r\n\r\n  // stateTransfer = ({ name, number }) => {\r\n  //   const contact = {\r\n  //     name,\r\n  //     number,\r\n  //     id: uuidv4(),\r\n  //   };\r\n\r\n  //   this.setState((prevState) => ({\r\n  //     contacts: [contact, ...prevState.contacts],\r\n  //   }));\r\n  // };\r\n\r\n  // filterContact = (e) => {\r\n  //   this.setState({ filter: e.currentTarget.value });\r\n  // };\r\n  // deleteTodo = (todoId) => {\r\n  //   this.setState((prevState) => ({\r\n  //     contacts: prevState.contacts.filter((contact) => contact.id !== todoId),\r\n  //   }));\r\n  // };\r\n\r\n  render() {\r\n    return (\r\n      <div className={style.box}>\r\n        <h1 className={style.title}>Phonebook</h1>\r\n        <AddContact\r\n          uuidv4={uuidv4}\r\n          // stateTransfer={this.stateTransfer}\r\n          // contacts={contacts}\r\n        />\r\n        <h2 className={style.title}>Contacts</h2>\r\n\r\n        <Filter\r\n          uuidv4={uuidv4}\r\n          // filterContact={this.filterContact}\r\n          // filter={filter}\r\n        />\r\n        <ContactList\r\n          // filterTodos={filterTodos}\r\n          uuidv4={uuidv4}\r\n          // deleteTodo={this.deleteTodo}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\n// import contactTypes from \"./contact-types\";\r\nimport * as actions from \"../../redux/contact/contact-action\";\r\n\r\n// const initialState = {\r\n//   contacts: {\r\n//     items: [],\r\n//     filter: \"\",\r\n//   },\r\n// };\r\n\r\nconst items = createReducer([], {\r\n  [actions.addContact]: (state, { payload }) => [...state, payload],\r\n  [actions.deleteContact]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\n// const items = (state = [], { type, payload }) => {\r\n//   switch (type) {\r\n//     case contactTypes.ADD:\r\n//       return [...state, payload];\r\n\r\n//     case contactTypes.DEL:\r\n//       return state.filter(({ id }) => id !== payload);\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\nconst filter = createReducer(\"\", {\r\n  [actions.filterContact]: (_, { payload }) => payload,\r\n});\r\n// (state = \"\", { type, payload }) => {\r\n//   switch (type) {\r\n//     case actions.filterContact:\r\n//       return payload;\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n","import contactReducer from \"./contact/contact-reducer\";\r\nimport { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport logger from \"redux-logger\";\r\n// import persistReducer from \"redux-persist/es/persistReducer\";\r\n\r\n// import { combineReducers } from \"redux\";\r\n// import { composeWithDevTools } from \"redux-devtools-extension\";\r\n// import { reduce } from \"async\";\r\n\r\n// const store = createStore(rootReducer, composeWithDevTools());\r\n\r\nconst persistConfig = {\r\n  key: \"root\",\r\n  storage,\r\n  blacklist: [\"filter\"],\r\n};\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\n// const persistReducers = persistReducer(\r\n//   persistConfig,\r\n//   combineReducers({\r\n//     contact: contactReducer,\r\n//   })\r\n// );\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contact: persistReducer(persistConfig, contactReducer),\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nconst stor = { store, persistor };\r\n\r\nexport default stor;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { Provider } from \"react-redux\";\r\nimport { PersistGate } from \"redux-persist/integration/react\";\r\n\r\nimport store from \"./redux/store\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <PersistGate loading={null} persistor={store.persistor}>\r\n      <Provider store={store.store}>\r\n        <App />\r\n      </Provider>\r\n    </PersistGate>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}